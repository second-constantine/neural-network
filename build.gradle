apply plugin: "kotlin"
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: 'maven'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Neural Network'
                packaging 'jar'
                description 'Simple neural network in kotlin'
                url 'https://next-way.by/'

                scm {
                    connection 'scm:git@github.com:second-constantine/neural-network.git'
                    developerConnection 'scm:git@github.com:second-constantine/neural-network.git'
                    url 'https://github.com/second-constantine/neural-network'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'second_constantine'
                        name 'Constantine Stupakevich'
                        email 'constantine.stupakevich@next-way.by'
                    }
                }
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'by.next-way'
            artifactId = 'neural.network'
            version = '1.0'
            from components.java
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "log4j:log4j:1.2.14"
    compile "org.apache.logging.log4j:log4j-api:2.1"
    compile "org.apache.logging.log4j:log4j-core:2.1"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    
    //junit5
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.11"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.3.11"
    }
}

jar {
    baseName = "neural-network"
    version = "1.0"
}